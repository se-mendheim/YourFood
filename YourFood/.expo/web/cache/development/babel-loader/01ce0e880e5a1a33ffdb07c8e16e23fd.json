{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\MENDHEIMSE17\\\\Desktop\\\\YourFoodV2\\\\components\\\\FoodScreen.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport 'react-native-gesture-handler';\nimport * as firebaseInfo from \"./Firebase\";\nvar diffFoods = [\"generic\", \"meats\", \"veggies\"];\nvar likedFoods = [];\nvar dislikedFoods = [];\nvar fbdb = firebaseInfo.firebaseApp.database();\n\nvar FoodScreen = function (_Component) {\n  _inherits(FoodScreen, _Component);\n\n  var _super = _createSuper(FoodScreen);\n\n  function FoodScreen() {\n    var _this;\n\n    _classCallCheck(this, FoodScreen);\n\n    _this = _super.call(this);\n    _this.pan = new Animated.ValueXY();\n    _this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant() {\n        _this.pan.setOffset({\n          x: _this.pan.x._value,\n          y: _this.pan.y._value\n        });\n      },\n      onPanResponderMove: Animated.event([null, {\n        dx: _this.pan.x,\n        dy: _this.pan.y\n      }]),\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        if (gestureState.dx > 120) {\n          if (_this.state.foodIndex < _this.state.images.length - 1) {\n            _this.setState({\n              foodIndex: _this.state.foodIndex + 1\n            });\n          }\n\n          likedFoods.push(_this.state.images[_this.state.foodIndex]);\n\n          if (_this.state.checkLevel == _this.state.images.length - 1) {\n            _this.setState({\n              screenElements: false\n            });\n\n            _this.setState({\n              nextButton: true\n            });\n          }\n\n          _this.setState({\n            checkLevel: _this.state.checkLevel + 1\n          });\n        } else if (gestureState.dx < -120) {\n          if (_this.state.foodIndex < _this.state.images.length - 1) {\n            _this.setState({\n              foodIndex: _this.state.foodIndex + 1\n            });\n          }\n\n          dislikedFoods.push(_this.state.images[_this.state.foodIndex]);\n\n          if (_this.state.checkLevel == _this.state.images.length - 1) {\n            _this.setState({\n              screenElements: false\n            });\n\n            _this.setState({\n              nextButton: true\n            });\n          }\n\n          _this.setState({\n            checkLevel: _this.state.checkLevel + 1\n          });\n        }\n\n        Animated.spring(_this.pan, {\n          toValue: {\n            x: 0,\n            y: 0\n          }\n        }).start();\n      }\n    });\n    _this.state = {\n      foodItems: {},\n      listFoods: new Map(),\n      images: [],\n      descriptions: [],\n      foodIndex: 0,\n      typeFood: 0,\n      checkLevel: 0,\n      nextButton: false,\n      screenElements: true\n    };\n    return _this;\n  }\n\n  _createClass(FoodScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      console.log(this.state.typeFood);\n      fbdb.ref('/food/' + diffFoods[this.state.typeFood]).once('value').then(function (snapshot) {\n        _this2.setState({\n          foodItems: snapshot.val()\n        });\n\n        _this2.setState({\n          listFoods: getFoods(_this2.state.foodItems)\n        });\n\n        _this2.setState({\n          images: getImages(_this2.state.listFoods)\n        });\n\n        _this2.setState({\n          descriptions: getDescriptions(_this2.state.listFoods)\n        });\n      });\n\n      var getImages = function getImages(prop) {\n        var imageLinks = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(prop), _step; !(_step = _iterator()).done;) {\n          var _ref = _step.value;\n\n          var _ref2 = _slicedToArray(_ref, 2);\n\n          var key = _ref2[0];\n          var value = _ref2[1];\n          var imageLink = prop.get(key)[0];\n          imageLinks.push(imageLink);\n        }\n\n        return imageLinks;\n      };\n\n      var getDescriptions = function getDescriptions(prop) {\n        var descriptions = [];\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose(prop), _step2; !(_step2 = _iterator2()).done;) {\n          var _ref3 = _step2.value;\n\n          var _ref4 = _slicedToArray(_ref3, 2);\n\n          var key = _ref4[0];\n          var value = _ref4[1];\n          var description = prop.get(key)[1];\n          descriptions.push(description);\n        }\n\n        return descriptions;\n      };\n\n      var getFoods = function getFoods(obj) {\n        var foods = new Map();\n\n        for (var key in obj) {\n          foods.set(key, obj[key]);\n        }\n\n        return foods;\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.viewContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.topBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.imageButtonTouch, {\n          marginRight: 190\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.imageButton,\n        source: require(\"./Images/settings.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: [styles.imageButtonTouch],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.imageButton,\n        source: require(\"./Images/foodbasket.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }))), this.state.screenElements ? React.createElement(View, {\n        style: styles.viewContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, React.createElement(Animated.View, _extends({\n        style: {\n          transform: [{\n            translateX: this.pan.x\n          }]\n        }\n      }, this.panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }), React.createElement(Image, {\n        style: styles.foodImage,\n        source: {\n          uri: this.state.images[this.state.foodIndex]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.foodDescContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.foodDescText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }\n      }, \" \", this.state.descriptions[this.state.foodIndex], \" \"))) : null, this.state.nextButton ? React.createElement(TouchableOpacity, {\n        style: styles.nextButton,\n        onPress: function onPress() {\n          _this3.setState({\n            typeFood: _this3.state.typeFood + 1\n          });\n\n          _this3.setState({\n            foodIndex: 0\n          });\n\n          _this3.setState({\n            checkLevel: 0\n          });\n\n          _this3.getData();\n\n          _this3.setState({\n            screenElements: true\n          });\n\n          _this3.setState({\n            nextButton: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.continueText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, \"Next Level\")) : null);\n    }\n  }]);\n\n  return FoodScreen;\n}(Component);\n\nexport { FoodScreen as default };\nvar styles = StyleSheet.create({\n  viewContainer: {\n    flex: 1,\n    backgroundColor: '#550527',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  topBar: {\n    flex: .3,\n    flexDirection: 'row',\n    backgroundColor: '#550527',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 5\n  },\n  imageButtonTouch: {\n    justifyContent: 'space-between',\n    width: 75,\n    height: 75,\n    borderRadius: 30\n  },\n  imageButton: {\n    width: 75,\n    height: 75,\n    borderRadius: 30\n  },\n  foodDescContainer: {\n    margin: 20,\n    backgroundColor: \"#C05746\",\n    color: \"#000000\"\n  },\n  brandText: {\n    fontSize: 50,\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontFamily: 'ChalkboardSE-Bold'\n  },\n  foodDescText: {\n    fontSize: 20,\n    color: '#FFFFFF',\n    fontFamily: 'Times New Roman',\n    padding: 20\n  },\n  foodImage: {\n    height: 275,\n    width: 275,\n    backgroundColor: \"#C05746\",\n    borderRadius: 30\n  },\n  nextButton: {\n    backgroundColor: '#E8AD0A',\n    borderRadius: 20,\n    margin: 20,\n    width: 200,\n    height: 50,\n    alignItems: 'center'\n  },\n  continueText: {\n    color: '#ffffff',\n    padding: 20,\n    fontSize: 23\n  }\n});","map":{"version":3,"sources":["C:/Users/MENDHEIMSE17/Desktop/YourFoodV2/components/FoodScreen.js"],"names":["React","Component","firebaseInfo","diffFoods","likedFoods","dislikedFoods","fbdb","firebaseApp","database","FoodScreen","pan","Animated","ValueXY","panResponder","PanResponder","create","onMoveShouldSetPanResponder","onPanResponderGrant","setOffset","x","_value","y","onPanResponderMove","event","dx","dy","onPanResponderRelease","evt","gestureState","state","foodIndex","images","length","setState","push","checkLevel","screenElements","nextButton","spring","toValue","start","foodItems","listFoods","Map","descriptions","typeFood","getData","console","log","ref","once","then","snapshot","val","getFoods","getImages","getDescriptions","prop","imageLinks","key","value","imageLink","get","description","obj","foods","set","styles","viewContainer","topBar","imageButtonTouch","marginRight","imageButton","require","transform","translateX","panHandlers","foodImage","uri","foodDescContainer","foodDescText","continueText","StyleSheet","flex","backgroundColor","alignItems","justifyContent","flexDirection","height","width","borderRadius","margin","color","brandText","fontSize","fontWeight","fontFamily","padding"],"mappings":"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","sourcesContent":["import React, { Component, } from 'react';\r\n\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  Animated,\r\n  PanResponder,\r\n  StyleSheet,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\n\r\nimport 'react-native-gesture-handler';\r\n\r\nimport * as firebaseInfo from './Firebase';\r\n\r\nconst diffFoods = [\"generic\",\"meats\",\"veggies\"];\r\n\r\nconst likedFoods = [];\r\nconst dislikedFoods = [];\r\n\r\nconst fbdb = firebaseInfo.firebaseApp.database();\r\n\r\n\r\nexport default class FoodScreen extends Component {\r\n  \r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            foodItems: {},\r\n            listFoods: new Map(),\r\n            images: [],\r\n            descriptions: [],\r\n            foodIndex: 0,\r\n            typeFood: 0,\r\n            checkLevel: 0,\r\n            nextButton: false,\r\n            screenElements: true,\r\n            \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n\r\n    }\r\n\r\n\r\n    getData() {\r\n        console.log(this.state.typeFood);\r\n\r\n        fbdb.ref('/food/' + diffFoods[this.state.typeFood]).once('value').then(snapshot => {\r\n            this.setState({ foodItems: snapshot.val(), });\r\n\r\n            this.setState({listFoods: getFoods(this.state.foodItems) });\r\n\r\n            this.setState({ images: getImages(this.state.listFoods) });\r\n            this.setState({ descriptions: getDescriptions(this.state.listFoods) })\r\n\r\n        });\r\n\r\n        var getImages = function(prop) {\r\n            var imageLinks = [];\r\n            for (let [key, value] of prop) {\r\n            var imageLink = (prop.get(key))[0];\r\n            imageLinks.push(imageLink);\r\n            }\r\n            return imageLinks;\r\n        }\r\n\r\n        var getDescriptions = function(prop) {\r\n            var descriptions = [];\r\n                for (let [key, value] of prop) {\r\n                var description = (prop.get(key))[1];\r\n                descriptions.push(description);\r\n                }\r\n            return descriptions;\r\n        }\r\n\r\n        var getFoods = function(obj) {\r\n            var foods = new Map();\r\n            for (var key in obj) {\r\n                //for (var item in key) {\r\n                    //foods.set(key, array);\r\n                //}\r\n                foods.set(key, obj[key]);\r\n            }\r\n            return foods;\r\n        }    \r\n    }\r\n\r\n    pan = new Animated.ValueXY();\r\n\r\n    panResponder = PanResponder.create({\r\n        onMoveShouldSetPanResponder: () => true,\r\n        onPanResponderGrant: () => {\r\n            this.pan.setOffset({\r\n              x: this.pan.x._value,\r\n              y: this.pan.y._value,\r\n            });\r\n          },\r\n          \r\n\r\n        onPanResponderMove: Animated.event([\r\n            null, \r\n            { dx: this.pan.x, dy: this.pan.y, }\r\n        ]),\r\n\r\n\r\n\r\n        onPanResponderRelease: (evt, gestureState) => {\r\n            //Animated.spring(this.pan, { toValue: {x: 0, y: 0}}).start();\r\n\r\n            if (gestureState.dx > 120) {\r\n                if (this.state.foodIndex < (this.state.images.length-1)) {\r\n                    this.setState({ foodIndex: this.state.foodIndex + 1});\r\n                }\r\n\r\n                likedFoods.push(this.state.images[this.state.foodIndex]);\r\n                \r\n                if (this.state.checkLevel == this.state.images.length-1) {\r\n                    this.setState({screenElements: false});\r\n                    this.setState({nextButton: true});\r\n                }\r\n\r\n                this.setState({checkLevel: this.state.checkLevel + 1});\r\n\r\n                //Animated.spring(this.pan, { toValue: {x: 0, y: 0}}).start();\r\n            }\r\n            else if (gestureState.dx < -120) {\r\n                if (this.state.foodIndex < (this.state.images.length-1)) {\r\n                    this.setState({ foodIndex: this.state.foodIndex + 1});\r\n                }\r\n\r\n                dislikedFoods.push(this.state.images[this.state.foodIndex]);\r\n                \r\n                if (this.state.checkLevel == this.state.images.length-1) {\r\n                    this.setState({screenElements: false});\r\n                    this.setState({nextButton: true});\r\n                }\r\n\r\n                this.setState({checkLevel: this.state.checkLevel + 1});\r\n\r\n                //Animated.spring(this.pan, { toValue: {x: 0, y: 0}}).start();\r\n            }\r\n\r\n\r\n            Animated.spring(this.pan, { toValue: {x: 0, y: 0}}).start();\r\n        }\r\n    });    \r\n\r\n    \r\n    \r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.viewContainer}>\r\n                <View style={styles.topBar}>\r\n                    <TouchableOpacity style={[styles.imageButtonTouch, {marginRight: 190}]}>\r\n                        <Image style={styles.imageButton} source={require('./Images/settings.png')}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={[styles.imageButtonTouch]}>\r\n                        <Image style={styles.imageButton} source={require('./Images/foodbasket.png')}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                { this.state.screenElements ?\r\n                    <View style={styles.viewContainer}>\r\n                        <Animated.View\r\n                            style={{\r\n                                transform: [{ translateX: this.pan.x }]\r\n                            }}\r\n                            {...this.panResponder.panHandlers}>\r\n                            <Image style={styles.foodImage} source={{uri: this.state.images[this.state.foodIndex]}} /> \r\n                        </Animated.View>\r\n\r\n                        <View style={styles.foodDescContainer}>\r\n                            <Text style={styles.foodDescText}> { this.state.descriptions[this.state.foodIndex]} </Text>\r\n                        </View>\r\n                    </View>\r\n                    : null\r\n                }\r\n                { this.state.nextButton ? \r\n                    <TouchableOpacity \r\n                        style={styles.nextButton}\r\n                        onPress={() => {\r\n                            this.setState({typeFood: this.state.typeFood + 1});\r\n                            this.setState({foodIndex: 0});\r\n                            this.setState({checkLevel: 0});\r\n                            this.getData();\r\n                            this.setState({screenElements: true});\r\n                            this.setState({nextButton: false});\r\n                            }\r\n                        }>\r\n                        <Text style={styles.continueText}>Next Level</Text>\r\n                    </TouchableOpacity>: null\r\n                }\r\n            </View>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    viewContainer: {\r\n      flex: 1,\r\n      backgroundColor: '#550527',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n\r\n    topBar: {\r\n        flex: .3,\r\n        flexDirection: 'row',\r\n        backgroundColor: '#550527',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: 5,\r\n    },\r\n\r\n    imageButtonTouch: {\r\n        justifyContent: 'space-between',\r\n        width: 75,\r\n        height: 75,\r\n        borderRadius: 30,\r\n    },  \r\n\r\n    imageButton: {\r\n        width: 75,\r\n        height: 75,\r\n        borderRadius: 30,\r\n    },\r\n\r\n    foodDescContainer: {\r\n        margin: 20,\r\n        backgroundColor: \"#C05746\",\r\n        color: \"#000000\",\r\n    },\r\n\r\n    brandText: {\r\n        fontSize: 50,\r\n        color: '#FFFFFF',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'ChalkboardSE-Bold',\r\n    },\r\n\r\n    foodDescText: {\r\n        fontSize: 20,\r\n        color:'#FFFFFF',\r\n        fontFamily:'Times New Roman',\r\n        padding: 20,\r\n    },\r\n\r\n    foodImage: {\r\n        height: 275,\r\n        width: 275,\r\n        backgroundColor: \"#C05746\",\r\n        borderRadius: 30,\r\n    },\r\n\r\n    nextButton: {\r\n        backgroundColor: '#E8AD0A',\r\n        borderRadius: 20,\r\n        margin: 20,\r\n        width: 200,\r\n        height: 50,\r\n        alignItems: 'center',\r\n    },\r\n\r\n    continueText: {\r\n        color: '#ffffff',\r\n        padding: 20,\r\n        fontSize: 23,\r\n    },\r\n\r\n  });"]},"metadata":{},"sourceType":"module"}